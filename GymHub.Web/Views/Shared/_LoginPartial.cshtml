@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav me-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-light" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Let's train, @user.FirstName
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                <li><a class="dropdown-item" href="#">Upcoming trainings</a></li>
                <li><a class="dropdown-item" href="#">Your schedule</a></li>
                <li><a class="dropdown-item" href="/User/GetAccordingViewForEdit">Edit Account</a></li>
            </ul>
        </li>
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>


    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="User" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="User" asp-action="Login">Login</a>
        </li>
    }
</ul>
