@model TrainerDetailsViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService
@inject ITraineeService TraineeService

<head>
    <link rel="stylesheet" href="C:\Users\Krisitina Manolova\source\repos\GymHub-Web-App\GymHub.Web\wwwroot\css\TrainersDetails.css">
</head>

<h3>Trainer @Model.FirstName @Model.LastName</h3>
<h4>General Infromation</h4>
<h6>Experience: @Model.Experience years</h6>

@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var isUserTrainee = await UserService.GetTraineeAsync(user.Id);

    if (isUserTrainee != null)
    {
        bool hasTrainingWithTrainer = this.TraineeService.CheckTraineeHasTrainingWithTrainer(isUserTrainee!, Model.Id);

        if (hasTrainingWithTrainer)
        {
            <h6>Phone number: +@Model.PhoneNumber</h6>
        }
        else
        {
            <h6>Phone number: You should book a training to see the trainer's phone number</h6>
        }
    }
    else
    {
        //Other Trainers can see phone numbers of their colleagues
        <h6>Phone number: +@Model.PhoneNumber</h6>
    }
}
else
{
    <h6>Phone number: You should log in AND book a training to see the trainer's phone number</h6>
}

<br />



<div class="row">
    <!-- Left column for "Bio" -->
    <div class="col-md-6 border margin-right">
        <h4>Trainer's message for you</h4>
        <p>@Model.Bio</p>
    </div>

    <!-- Right column for "Certificate" details -->
    <div class="col-md-6 border margin-left">
        <h4>Professional Qualification</h4>
        <p><b>Certificate</b>: @Model.Certificate.Name</p>
        <p><b>Issue Date:</b> @Model.Certificate.IssueDate.ToString("dd.MM.yyyy")</p>
        <p><b>Issued by:</b> @Model.Certificate.IssuingOrganization</p>
    </div>
</div>


@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var isUserTrainer = await UserService.GetTrainerAsync(user.Id);

    if (isUserTrainer != null)
    {

        <div class="col-10">
            <partial name="_TrainerSchedulePartial" model="new TrainerScheduleViewModel {DailyGroupSchedules = Model.TrainerSchedule.DailyGroupSchedules,
           DailySchedules = Model.TrainerSchedule.DailySchedules}" />
        </div>

    }
    else
    {

        <div class="form-container">
            <br/>
            <h2>Book a time for training</h2>
            <h5>You can refer to the schedule below for Trainer's availability or <a href="#trainerSchedule">click here</a>.</h5>
            <partial name="_BookIndividualTrainingPartial" model="new BookIndividualTrainingViewModel{ TrainerId = Model.Id }" />
        </div>
        <br />
        <div class="col-10">
            <br />
            <h2 id="trainerSchedule">Trainer's schedule</h2>
            <partial name="_TrainerSchedulePartial" model="new TrainerScheduleViewModel {DailyGroupSchedules = Model.TrainerSchedule.DailyGroupSchedules,
                DailySchedules = Model.TrainerSchedule.DailySchedules}" />
        </div>


    }
}
else
{
    <br />
    <h2>Trainer's schedule</h2>
    <div class="col-10">
        <partial name="_TrainerSchedulePartial" model="new TrainerScheduleViewModel {DailyGroupSchedules = Model.TrainerSchedule.DailyGroupSchedules,
           DailySchedules = Model.TrainerSchedule.DailySchedules}" />
    </div>
}



